@using System.Text
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<WebApplication1.Models.ListingProjects_ver2>
@{
    ViewData["Title"] = "Dashboard";
    
    var listingMd = Model?.FirstOrDefault();
}

<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <meta name="viewport" content="width=device-width" />
    <title>TestDashboard1</title>
    <link rel="stylesheet" type="text/css" href="~/css/dashboardAsOf1712_24.css" />
</head>
<body>

<div id="CreateUser" class="form-horizontal" method="post" asp-action="CreateUser" asp-controller="Home" action="BufferedSingleFileUploadPhysical/?handler=Upload"
     enctype="multipart/form-data" > 
    
    <h4>Properties</h4>
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.ValidationMessage("validation")
    
    <div class="form-group">
        <label class="control-label col-md-2">Name</label>
        <div class="col-md-10">
            <!-- src="../imgSearchHome/PXL_20250309_130130279.jpg" -->
            <input class="form-control" type="text" name="ListingName" id="ListingName"/>
            <form><img style="display:block; width:100px;height:100px;" src="../imgSearchHome/PXL_20250309_130130279.jpg" id="listingImageImg" type="file"></img><input type="file" class="form-control" id="imageListingY" onchange='previewFile(this.files[0]),  imageUploaded(this)' accept="image/*" name="imageListingY"/>
            </form>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="btnCreateListing" value="click me to create" class="btn btn-default" />
        </div>
       
    </div>
</div>


    <div id="EditDashboardNow" method="post" name="editSubmitId">
        <form method="post" asp-controller="Home" asp-action="EditListingJpost" enctype="multipart/form-data">
            <div class="listing form-horizontal">
                <div class="content">
                   
                    <div class="content">
                        <!-- Hidden input for Id -->
                        <input type="hidden" value="@listingMd.Id" id="EditIdButHidden" name="Id" />
                        <div>
                            Property Name:
                            <div class="form-group">
                                <input class="form-control" id="editPropertyName" name="ListingName"/>
                                
                            </div>
                        </div>
                        <picture>I am the EditDashboard now</picture>
                        <p>Age: </p>
                        <div class="roundPlaceholder">
                            <p class="roundPlaceholderTxt">Book me once you edit</p>
                        </div>
                        <div class="deleteListingBtn">
                            <button type="button" class="delete" id="Delete" class="btn btn-danger">Delete</button>
                        </div>
                        <div>
                            <button type="submit" id="btnSaveEdit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary cancel-btn edit-mode" style="display: none;">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>

    </div>

<div class="wrapper" id="preExistingDashboard">
    @foreach (var listingModel in Model)
    {

        <div class="listing">


            <div class="content">
                <div>
                    <img src=@listingModel.ListingImgName style="display:block; width:100px;height:100px;" id="listingImageImgUploaded">
                   
                </div>
                <p>
                    Property Name: <span class="view-mode listing-name">@listingModel.ListingName</span>

                </p>
                <p>I am the pre-existing dashboard</p>
                <p>Age: @listingModel.Id</p>
                <div class="roundPlaceholder">
                    <p class="roundPlaceholderTxt">Book me before you edit</p>
                </div>
                <div class="deleteListingBtn">
                    <button type="button" class="delete" id="Delete" onclick="Delete(@listingModel.Id)" class="btn btn-danger">Delete</button>
                </div>
                <div class="editListingBtn" class="listing">
                    <button type="button" id="btnEditUser" value="Edit" onclick="EditListing(@listingModel.Id)">Edit</button>
                    <button type="button" class="btn btn-success save-btn edit-mode" style="display: none;">Save</button>
                    <button type="button" class="btn btn-secondary cancel-btn edit-mode" style="display: none;">Cancel</button>
                </div>
            </div>
        </div>

    }
</div> 
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
<script type="text/javascript">
    function previewFile(file) {
        const preview = document.getElementById("listingImageImg");
        const reader = new FileReader();

        reader.addEventListener(
            "load",
            () => {
                // convert image file to base64 string
                preview.src = reader.result;
            },
            false,
        );

        if (file) {
            reader.readAsDataURL(file);
        }
    }

    let base64String = "";

    function imageUploaded(element) {
        let file = document.querySelector(
            'input[type=file]')['files'][0];

        let reader = new FileReader();
        console.log("next");

        reader.onload = function () {
            base64String = reader.result.replace("data:", "")
                .replace(/^.+,/, "");

            imageBase64Stringsep = base64String;

            // alert(imageBase64Stringsep);
            console.log(base64String);
            
            document.getElementById("listingImageImg").setAttribute("src", base64String);
        }
        //return reader.readAsDataURL(file);
    }

    function displayString() {
        console.log("Base64String about to be printed");
        alert(base64String);
    }
   /**/
    $("#EditDashboardNow").hide();
    
    $("#btnCreateListing").click(function (event) {
        event.preventDefault(); // Prevent default form submission
        //var file = document.getElementById("listingImageImg").getAttribute("src");
        var fileInput = document.getElementById("imageListingY");
        var appendImgFiles = fileInput.files[0];
        var formData = new FormData();
        formData.append("Id", $("#EditIdButHidden").val());
        formData.append("ListingName", $("#ListingName").val());
        formData.append('file', appendImgFiles);

        $.ajax({
            url: "/Home/CreateUser",
            type: "POST",
            processData: false,
            contentType: false,
            data: formData,
            success: function (response) {
                if (response.success) {
                    alert("Listing created successfully!");
                    location.reload();
                } else {
                    alert("listing created anyway");
                    location.reload();
                }
            },
            error: function () {
                alert("An error occurred while creating.");
            }
            
        });
        
            
    });
            function EditListing(Id) {
        $.get("/Home/EditListingJ", { Id: Id }, function (data) {
            console.log("Received Data:", data); // Debugging

            if (data && data.Id) { // Ensure property names match
                $("#preExistingDashboard").hide();
                $("#EditDashboardNow").show();

                $("#editPropertyName").val(data.ListingName);
                $("#EditIdButHidden").val(data.Id);
                $("#ListingImage").val(data.ListingImage);

                console.log("Updated Fields:", $("#EditIdButHidden").val(), $("#editPropertyName").val(), $("#ListingImage").val());
            } else {
                console.error("Invalid Data Format:", data);
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {
            console.error("AJAX Request Failed:", textStatus, errorThrown);
        });
    }

    $("#btnSaveEdit").click(function (event) {
        event.preventDefault(); // Prevent default form submission

        var formData = new FormData();
        formData.append("Id", $("#EditIdButHidden").val());
        formData.append("ListingName", $("#editPropertyName").val());
        formData.append("ListingImage", $("#ListingImage").val());

        $.ajax({
            url: "/Home/EditListingJpost",
            type: "POST",
            processData: false,
            contentType: false,
            data: formData,
            success: function (response) {
                if (response.success) {
                    alert("Listing updated successfully!");
                    location.reload();
                } else {
                    alert("Error: " + response.message);
                }
            },
            error: function () {
                alert("An error occurred while saving.");
            }
        });
    });

    $("#btnEditDetail").click(function () {
        var Id = document.getElementById("IdDetails").textContent;
        EditListing(Id);
    });

    function Delete(Id) {
        $.post("/Home/DeleteUserJ", { Id: Id }, function (data) {
            if (data != null) {
                alert("User Deleted");
                location.reload();
            } else {
                alert("Error");
            }
        });
    } // Fixed syntax here
</script>
</body>
</html>